apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: backend
  name: backend-deployment
  namespace: rushabh2390
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: rdddocker/favm_backend
        imagePullPolicy: Always
        resources:
          limits:
            memory: "512Mi"
            cpu: "1"
        ports:
        - containerPort: 8000
        env:
        - name: MONGODB_URL
          value: mongodb://username:password@mongodb-service:27017
        - name: Fast_Title
          value: kubernates runner
---
apiVersion: v1
kind: Service
metadata:
  name: fastapi-service
  labels:
    app: fastapi-service
  annotations:
    dev.okteto.com/auto-ingress: "true"
spec:
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
      nodePort: 31000
  selector:
    app: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: frontend
  name: frontend-deployment
  namespace: rushabh2390
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      volumes:
      - name: config-volume
        configMap:
          name: okteto-frontend-configmap
      containers:
      - name: frontend
        image: rdddocker/favm_frontend
        imagePullPolicy: Always
        resources:
          limits:
            memory: "512Mi"
            cpu: "1"
        ports:
        - containerPort: 80
        env:
        - name: VUE_APP_API_BACKEND
          value: fastapi-service
        - name: VUE_APP_TITLE
          value: kubernates runner
        volumeMounts:
          - name: config-volume
            mountPath: /usr/share/nginx/html/static/config.js
            subPath: config.js
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  labels:
    app: frontend-service
  annotations:
    dev.okteto.com/auto-ingress: "true"
spec:
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  selector:
    app: frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-express
  labels:
    app: mongo-express
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo-express
  template:
    metadata:
      labels:
        app: mongo-express
    spec:
      containers:
      - name: mongo-express
        image: mongo-express
        imagePullPolicy: Never
        resources:
          limits:
            memory: "512Mi"
            cpu: "1000m"
        ports:
        - containerPort: 8081
        env:
        - name: ME_CONFIG_MONGODB_ADMINUSERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key:  mongo-root-username
        - name: ME_CONFIG_MONGODB_ADMINPASSWORD
          valueFrom:
             secretKeyRef:
              name: mongodb-secret
              key:  mongo-root-password
        - name: ME_CONFIG_MONGODB_SERVER
          valueFrom:
             configMapKeyRef:
              name: mongodb-configmap
              key:  database_url
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-express-service
spec:
  selector:
    app: mongo-express
  type: LoadBalancer
  ports:
  - protocol: TCP
    port: 8081
    targetPort: 8081
    nodePort: 30000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-deployment
  labels:
    app: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo
        imagePullPolicy: Never
        resources:
          limits:
            memory: "1Gi"
            cpu: "1000m"
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key:  mongo-root-username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
             secretKeyRef:
              name: mongodb-secret
              key:  mongo-root-password
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
spec:
  selector:
    app: mongodb
  ports:
  - protocol: TCP
    port: 27017
    targetPort: 27017